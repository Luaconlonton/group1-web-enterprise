<html lang="en">
<script src="https://d3js.org/d3.v6.min.js"></script>
{{> head}}

<body class="sb-nav-fixed">
    {{> qamHeader}}
        <div method="post" action="/qam/numberOfIdeasByYear" style="margin: 4% 15%;">
        <div class="form-group"></div>
        <div class="row">
            <div class='col-md-2'>
                From: <input type="number" id="start-year" name="from" min="1900" value="2022" class="form-control" />
            </div>
            <div class='col-md-2'>
                To: <input type="number" id="end-year" name="to" min="1900" value="2022" class="form-control" />
            </div>
            <div class='col-md-2' >
                <input onclick="fileterYear()" type="submit" value="Find" class="btn btn-outline-info" style="margin-top: 7%; width: 70px; height: 35px;" >
        </div>
        </div>
        
        
            
        </div>
    </div>
    </div>
    <div id="container" style="width: 70%; height: 80%; margin: -2% 15%; padding: 0;">
        <div id="pie-chart"></div>
    </div>

</body>

<script type="text/javascript">
        // set the data
        let data = [];
        data = {{{ listYear }}}
        data = Object.values(data.reduce((acc, { time}) => {
            const yearOnly = new Date(time).getFullYear().toString();
            if (!acc[yearOnly]) {
            acc[yearOnly] = { name: yearOnly, idea: 1 };
            }
            acc[yearOnly].idea += 1;
            return acc;
        }, {})
        );
         
    function renderChart(data) {
        const svgWidth = 400;
  const svgHeight = 400;
         const svg = d3.select('#pie-chart')
    .append('svg')
    .attr('width', svgWidth)
    .attr('height', svgHeight);

const pieData = d3.pie()
    .value(d => d.idea)
    (data);

  const color = d3.scaleOrdinal()
    .domain(data.map(d => d.name))
    .range(d3.schemeCategory10);

  const g = svg.append('g')
    .attr('transform', `translate(${svgWidth/2}, ${svgHeight/2})`);

  const arc = d3.arc()
    .innerRadius(0)
    .outerRadius(svgHeight/2);

  g.selectAll('path')
    .data(pieData)
    .enter()
    .append('path')
    .attr('d', arc)
    .attr('fill', d => color(d.data.name));

  g.selectAll('text')
    .data(pieData)
    .enter()
    .append('text')
    .text(d => `${d.data.name} (${d.data.idea*100/6}%)`)
    .attr('transform', d => `translate(${arc.centroid(d)})`)
    .attr('text-anchor', 'middle');

    }
    renderChart(data);
</script>
<script>
    function fileterYear() {
        document.getElementById("pie-chart").innerHTML= ""
        let startYear= document.getElementById("start-year").value
        let endYear= document.getElementById("end-year").value
        console.log(data?.filter(item=> parseInt(startYear) <= parseInt(new Date(item.name).getFullYear()) && parseInt(new Date(item.name).getFullYear()) <= parseInt(endYear)))
        renderChart(data?.filter(item=> parseInt(startYear) <= parseInt(new Date(item.name).getFullYear()) && parseInt(new Date(item.name).getFullYear()) <= parseInt(endYear)))
    }
</script>

</html>